trigger:
  branches:
    include:
      - master
  tags:
    include:
      - '*'


variables:
  BuildDirectory: build
  Generator: Visual Studio 16 2019
  DistributeDirectory: distribute
  FullDistributePath: $(BuildDirectory)\$(DistributeDirectory)
  RuntimeURL: https://atom.io/download/atom-shell
  RuntimeName: iojs
  RuntimeVersion: v13.4.0

jobs:
- job: 'Windows'
  pool:
    vmImage: 'windows-2019'
  workspace:
    clean: all

  steps:
  - powershell: git config --global core.autocrlf false
    displayName: 'Set Unix checkout for git'

  - checkout: self
    fetchDepth: 10

  - powershell: 'Write-Host "##vso[task.setvariable variable=targetartifact]game-overlay-$((git.exe describe --tags --abbrev=0) | Out-String)"'
    displayName: 'Get tag for artifact'

  - script: 'yarn install'
    displayName: 'Install dependencies'

  - script: 'cmake -H. -B"%BuildDirectory%" -G"%Generator%"  -DCMAKE_INSTALL_PREFIX="%FullDistributePath%\game-overlay" -DNODEJS_NAME=%RuntimeName% -DNODEJS_URL=%RuntimeURL% -DNODEJS_VERSION=%RuntimeVersion%'
    displayName: 'Configure game-overlay'

  - script: 'node scripts/bump-version.js'
    displayName: 'Bump version number'
    condition: and(succeeded(), contains(variables['Build.SourceBranch'], 'tags'))

  - script: 'cmake --build %BuildDirectory% --target install --config RelWithDebInfo'
    displayName: 'Build game-overlay'

  - task: ArchiveFiles@2
    displayName: 'Generate artifact'
    inputs:
      rootFolderOrFile: $(FullDistributePath)
      includeRootFolder: false
      archiveType: tar
      tarCompression: gz
      archiveFile: '$(targetartifact)-win64.tar.gz'

  - task: PublishBuildArtifacts@1
    displayName: 'Publish build artifact'
    inputs:
      pathtoPublish: $(Build.SourcesDirectory)\$(targetartifact)-win64.tar.gz
      artifactName: $(targetartifact)-win64.tar.gz

  - task: S3Upload@1
    inputs:
      awsCredentials: 'SLOBS_BE_AWS'
      regionName: 'us-west-2'
      bucketName: 'obs-studio-deployment'
      globExpressions: '$(targetartifact)-win64.tar.gz'
      filesAcl: 'public-read'
    displayName: 'Upload tag artifact to S3'
    condition: and(succeeded(), contains(variables['Build.SourceBranch'], 'tags'))

